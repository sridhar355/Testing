name: GitHub Actions Demo
on:
  pull_request:
    types: [opened, closed]

jobs:
  # sample-job
  Explore-GitHub-Actions:
    # checking if the name of label is 'branch' that we assign during pull_request creation
    # if: ${{ github.event.label.name == 'branch' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      # printing label name and description - description given as branch name
      - run: echo "The job was triggered with label ${{github.event.label.name}} and description ${{github.event.label.description}}."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo " The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo " The workflow is now ready to test your code on the runner."
      - name: List files in the repository
      # creating and checkout to new branch - branch name fetched from label description
        run: |
          ls ${{ github.workspace }}
      - run: echo " This job's status is ${{ job.status }}."
  Branch-Creation:
    # this job will only run if the PR has been merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered with label ${{github.event.label.name}} and description ${{github.event.label.description}}."
      - run: echo "title ${{github.event.pull_request.title}} number ${{github.event.pull_request.number}}."
      - run: echo "the commit message is ${{ github.event.head_commit.message }}."
      - name: checkout repository code
        uses: actions/checkout@v2
      - name: List files in the repository
        run: |
          git status
          git checkout -b branch2
          git push -u origin branch2
          git branch
          ls ${{ github.workspace }}
  
