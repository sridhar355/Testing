name: GitHub Actions Demo
on:
  pull_request:
    types: [closed]

jobs:
  # sample-job
  Explore-GitHub-Actions:
    # checking if the name of label is 'branch' that we assign during pull_request creation
    # if: ${{ github.event.label.name == 'branch' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      # printing label name and description - description given as branch name
      - run: echo "The job was triggered with label ${{github.event.label.name}} and description ${{github.event.label.description}}."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo " The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo " The workflow is now ready to test your code on the runner."
      - name: List files in the repository
      # creating and checkout to new branch - branch name fetched from label description
        run: |
          ls ${{ github.workspace }}
      - run: echo " This job's status is ${{ job.status }}."
  Branch-Creation:
    #this job will only run if the PR has been merged
    #if: github.event.pull_request.merged == true
    #(${{github.event.pull_request.title}} == Pull Request for*)&& 
     # (${{github.event.pull_request.title}} == *release)&&
     #startsWith(github.event.pull_request.title, 'Pull Request for') && endsWith(github.event.pull_request.title, 'release')
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'Pull Request for') && contains(github.event.pull_request.title, 'release') && contains(github.event.pull_request.title, 'release')}}
    runs-on: ubuntu-latest
    
    steps:
      - run: echo "title ${{github.event.pull_request.title}}."
      - name: checkout repository code
        uses: actions/checkout@v2
      - name: set env variable
        run: |
          VERSION=`echo ${{github.event.pull_request.title}} | cut -d " " -f 4`
          desc="Pull Request for $VERSION tools release"
          echo "description $desc"
          echo "${{github.event.pull_request.title}}"
      #- name: env variable 
        #env:
         # VERSION: echo "${{github.event.pull_request.title}}" | cut -d " " -f 4
         # desc: "::set-env name=VERSION::desc: "${{Pull Request for $VERSION tools release}}" |
         # desc: Pull Request for $VERSION tools release
      #- name: Creating branch
        #if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Pull Request for') && endsWith(github.event.pull_request.title, 'release')}}
        #run: |
        #  VERSION=`echo ${{github.event.pull_request.title}} | cut -d " " -f 4`
        #  desc="Pull Request for $VERSION tools release"
        #  echo "description $desc"
      - name: version env
        run: |
          echo ::set-env name=version::"${github.event.pull_request.title}" | cut -d " " -f 4
          echo "the version is $version"
      - name: condition checking
        run: |
          a="60"
        if: ${{a=='60'}}
          branch_name=`echo ${{github.event.pull_request.title}} | cut -d " " -f 4`
          desc="Pull Request for $branch_name tools release"
          echo "the desc is $desc"
          echo "creating the branch $branch_name "
          git pull
          git status
          git checkout -b $branch_name
          git push -u origin $branch_name
          git branch
